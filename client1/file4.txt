该函数用于关闭TCP连接，但并不关闭socket句柄。其第二个参数可以取三个值：SD_RECEIVE，SD_SEND，SD_BOTH。

　　SD_RECEIVE表明关闭接收通道，在该socket上不能再接收数据，如果当前接收缓存中仍有未取出数据或者以后再有数据到达，则TCP会向发送端发送RST包，将连接重置。

　　SD_SEND表明关闭发送通道，TCP会将发送缓存中的数据都发送完毕并在收到所有数据的ACK后向对端发送FIN包，表明本端没有更多数据发送。这个是一个优雅关闭过程。

　　SD_BOTH则表示同时关闭接收通道和发送通道。

　　closesocket函数的原型是：

　　int closesocket(

　　SOCKET s

　　);

　　该函数用于关闭socket句柄，并释放相关资源。前面说过，关闭socket句柄时会隐含触发TCP连接的关闭过程，那么closesocket触发的是一个优雅关闭过程还是强制关闭过程呢？这个与一个socket选项有关：SO_LINGER 选项，该选项的设置值决定了closesocket的行为。该选项的参数值是linger结构，其定义是：

　　typedef struct linger {

　　u_short l_onoff; 